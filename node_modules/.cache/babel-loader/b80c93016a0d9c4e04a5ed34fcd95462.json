{"ast":null,"code":"var _jsxFileName = \"/Users/afgioia/SEI/projects/Kanji-Death-Match/kanji-death-match/src/Routes/Fight.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fight = props => {\n  _s();\n\n  console.log(\"Props: \", props); //Assign battle stats to each kanji based on data\n\n  let p1 = props.fighters[0];\n  let p2 = props.fighters[1];\n  const [player1Hp, setPlayer1Hp] = useState();\n  const [player2Hp, setPlayer2Hp] = useState();\n  p1.attackPower = p1.kanji.strokes.count * 5;\n  p2.attackPower = p2.kanji.strokes.count * 5;\n  console.log(p1.attackPower, p2.attackPower);\n\n  const handleWin = () => {\n    console.log(\"Win\");\n  };\n\n  const handleBattle = () => {\n    console.log(\"round 1\");\n    let round = 1;\n    setPlayer1Hp(p1.kanji.strokes.count * p1.radical.strokes + 200);\n    setPlayer2Hp(p2.kanji.strokes.count * p2.radical.strokes + 200);\n    console.log(player1Hp, player);\n    let p1HpCopy = player1Hp;\n    let p2HpCopy = player2Hp;\n    const gameClock = setInterval(() => {\n      let rngAttack;\n      console.log(\"HP status:\", p1HpCopy, p2HpCopy);\n\n      if (p1HpCopy > 0 && p2HpCopy > 0) {\n        switch (round % 2 === 0) {\n          case true:\n            rngAttack = Math.floor(Math.random() * p1.attackPower);\n            p2HpCopy -= rngAttack;\n            setPlayer2Hp(p2HpCopy);\n            console.log(`p1 attacks for: ${rngAttack} damage!`, player2Hp);\n            break;\n\n          case false:\n            rngAttack = Math.floor(Math.random() * p2.attackPower);\n            p1HpCopy -= rngAttack;\n            setPlayer1Hp(p1HpCopy);\n            console.log(`p2 attacks for: ${rngAttack} damage!`, player1Hp);\n            break;\n        }\n\n        round++;\n        console.log(round);\n      }\n      /*else if (player1Hp < 0) {\n        setPlayer1Hp(0);\n        clearInterval(gameClock);\n        handleWin(1);\n      } else if (player2Hp < 0) {\n        setPlayer1Hp(0);\n        clearInterval(gameClock);\n        handleWin(2);*/\n      // }\n\n    }, 3000);\n  }; // setTimeout(handleBattle, 3000)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dojo\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"battleStats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-1-hp\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: player1Hp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: () => setTimeout(handleBattle, 1000),\n        children: \"FIGHT!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-2-hp\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: player2Hp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"battle-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Fight, \"UWJGXZ2XwdEPavbKdtK7Cb8EveM=\");\n\n_c = Fight;\nexport default Fight;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fight\");","map":{"version":3,"names":["useState","useEffect","Fight","props","console","log","p1","fighters","p2","player1Hp","setPlayer1Hp","player2Hp","setPlayer2Hp","attackPower","kanji","strokes","count","handleWin","handleBattle","round","radical","player","p1HpCopy","p2HpCopy","gameClock","setInterval","rngAttack","Math","floor","random","setTimeout"],"sources":["/Users/afgioia/SEI/projects/Kanji-Death-Match/kanji-death-match/src/Routes/Fight.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Fight = (props) => {\n\n    console.log(\"Props: \", props)\n    //Assign battle stats to each kanji based on data\n    let p1 = props.fighters[0];\n    let p2 = props.fighters[1];\n    const [player1Hp, setPlayer1Hp] = useState();\n    const [player2Hp, setPlayer2Hp] = useState()\n    p1.attackPower = p1.kanji.strokes.count * 5;\n    p2.attackPower = p2.kanji.strokes.count * 5;\n    console.log(p1.attackPower, p2.attackPower);\n    \n    const handleWin = () => {\n        console.log(\"Win\");\n    }\n    \n    const handleBattle = () => {\n        console.log(\"round 1\")\n        let round = 1\n        setPlayer1Hp(p1.kanji.strokes.count * p1.radical.strokes + 200);\n        setPlayer2Hp(p2.kanji.strokes.count * p2.radical.strokes + 200);\n        console.log(player1Hp, player)\n        let p1HpCopy = player1Hp;\n        let p2HpCopy = player2Hp;\n        const gameClock = setInterval(() => {\n            let rngAttack;\n            console.log(\"HP status:\", p1HpCopy, p2HpCopy)\n            if (p1HpCopy > 0 && p2HpCopy > 0) {\n                switch (round % 2 === 0) {\n                    case true:\n                        rngAttack = Math.floor(Math.random() * p1.attackPower);\n                        p2HpCopy -= rngAttack;\n                        setPlayer2Hp(p2HpCopy);\n                        console.log(`p1 attacks for: ${rngAttack} damage!`, player2Hp);\n                        break;\n                    case false:\n                        rngAttack = Math.floor(Math.random() * p2.attackPower);\n                        p1HpCopy -= rngAttack;\n                        setPlayer1Hp(p1HpCopy);\n                        console.log(`p2 attacks for: ${rngAttack} damage!`, player1Hp);\n                        break;\n                }\n                round++;\n                console.log(round)\n            } /*else if (player1Hp < 0) {\n                setPlayer1Hp(0);\n                clearInterval(gameClock);\n                handleWin(1);\n            } else if (player2Hp < 0) {\n                setPlayer1Hp(0);\n                clearInterval(gameClock);\n                handleWin(2);*/\n           // }\n        }, 3000)\n    }\n\n    // setTimeout(handleBattle, 3000)\n\n    return (\n        <div className=\"Dojo\">\n            <header className=\"battleStats\">\n                <div className=\"player-1-hp\"><h1>{player1Hp}</h1></div>\n                <button className=\"start\" onClick={() => setTimeout(handleBattle, 1000)}>FIGHT!!!</button>\n                <div className=\"player-2-hp\"><h1>{player2Hp}</h1></div>\n            </header>\n            <section className=\"battle-stats\">\n                <div></div>\n                <div></div>\n            </section>\n        </div>\n    )\n}\n\nexport default Fight;"],"mappings":"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"},"metadata":{},"sourceType":"module"}