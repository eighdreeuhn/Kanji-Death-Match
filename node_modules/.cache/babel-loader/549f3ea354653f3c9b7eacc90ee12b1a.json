{"ast":null,"code":"var _jsxFileName = \"/Users/afgioia/SEI/projects/Kanji-Death-Match/kanji-death-match/src/Routes/Fight.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fight = props => {\n  _s();\n\n  console.log(\"Props: \", props); //Assign battle stats to each kanji based on data\n\n  let p1 = props.fighters[0];\n  let p2 = props.fighters[1];\n  const [fight, setFight] = useState([]);\n  const [player1Hp, setPlayer1Hp] = useState();\n  const [player2Hp, setPlayer2Hp] = useState();\n  p1.attackPower = p1.kanji.strokes.count * 5;\n  p2.attackPower = p2.kanji.strokes.count * 5;\n  console.log(p1.attackPower, p2.attackPower);\n  useEffect(() => {\n    setFight([]);\n    setPlayer1Hp();\n    setPlayer2Hp();\n  }, []);\n\n  const handleWin = () => {\n    console.log(\"Win\");\n  };\n\n  const handleBattle = () => {\n    console.log(\"round 1\");\n    let round = 1;\n    let one = p1.kanji.strokes.count * p1.radical.strokes + 200;\n    console.log(one);\n    setPlayer1Hp(one);\n    setPlayer2Hp(p2.kanji.strokes.count * p2.radical.strokes + 200);\n    console.log(player1Hp, player2Hp);\n    let p1HpCopy = player1Hp;\n    let p2HpCopy = player2Hp; // const gameClock = setInterval(() => {\n    //     let rngAttack;\n    //     console.log(\"HP status:\", p1HpCopy, p2HpCopy)\n    //     if (p1HpCopy > 0 && p2HpCopy > 0) {\n    //         switch (round % 2 === 0) {\n    //             case true:\n    //                 rngAttack = Math.floor(Math.random() * p1.attackPower);\n    //                 p2HpCopy -= rngAttack;\n    //                 setPlayer2Hp(p2HpCopy);\n    //                 console.log(`p1 attacks for: ${rngAttack} damage!`, player2Hp);\n    //                 break;\n    //             case false:\n    //                 rngAttack = Math.floor(Math.random() * p2.attackPower);\n    //                 p1HpCopy -= rngAttack;\n    //                 setPlayer1Hp(p1HpCopy);\n    //                 console.log(`p2 attacks for: ${rngAttack} damage!`, player1Hp);\n    //                 break;\n    //         }\n    //         round++;\n    //         console.log(round)\n    //     } /*else if (player1Hp < 0) {\n    //         setPlayer1Hp(0);\n    //         clearInterval(gameClock);\n    //         handleWin(1);\n    //     } else if (player2Hp < 0) {\n    //         setPlayer1Hp(0);\n    //         clearInterval(gameClock);\n    //         handleWin(2);*/\n    //    // }\n    // }, 3000)\n\n    let interval = setInterval(() => {\n      if (p1HpCopy > 0 && p2HpCopy > 0) {\n        const rngAttack = Math.floor(Math.random() * p1.attackPower);\n        round % 2 === 0 ? p1HpCopy -= rngAttack : p2HpCopy -= rngAttack;\n        setPlayer1Hp(p1HpCopy);\n        setPlayer2Hp(p2HpCopy);\n        round++;\n      } else {\n        clearInterval(interval);\n      }\n    }, 1000);\n  }; // setTimeout(handleBattle, 3000)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dojo\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"battleStats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-1-hp\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: player1Hp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: () => setTimeout(handleBattle, 1000),\n        children: \"FIGHT!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-2-hp\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: player2Hp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"battle-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Fight, \"jlp56muoeH+Pi5n9GxMJJy0tqDI=\");\n\n_c = Fight;\nexport default Fight;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fight\");","map":{"version":3,"names":["useState","useEffect","Fight","props","console","log","p1","fighters","p2","fight","setFight","player1Hp","setPlayer1Hp","player2Hp","setPlayer2Hp","attackPower","kanji","strokes","count","handleWin","handleBattle","round","one","radical","p1HpCopy","p2HpCopy","interval","setInterval","rngAttack","Math","floor","random","clearInterval","setTimeout"],"sources":["/Users/afgioia/SEI/projects/Kanji-Death-Match/kanji-death-match/src/Routes/Fight.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Fight = (props) => {\n\n    console.log(\"Props: \", props)\n    //Assign battle stats to each kanji based on data\n    let p1 = props.fighters[0];\n    let p2 = props.fighters[1];\n    const [fight, setFight] = useState([])\n    const [player1Hp, setPlayer1Hp] = useState();\n    const [player2Hp, setPlayer2Hp] = useState()\n    p1.attackPower = p1.kanji.strokes.count * 5;\n    p2.attackPower = p2.kanji.strokes.count * 5;\n    console.log(p1.attackPower, p2.attackPower);\n\n    useEffect(() => {\n        setFight([])\n          setPlayer1Hp();\n          setPlayer2Hp();\n      }, [])\n    \n    const handleWin = () => {\n        console.log(\"Win\");\n    }\n    \n    const handleBattle = () => {\n        console.log(\"round 1\")\n        let round = 1\n        let one = p1.kanji.strokes.count * p1.radical.strokes + 200\n        console.log(one)\n        setPlayer1Hp(one);\n        setPlayer2Hp(p2.kanji.strokes.count * p2.radical.strokes + 200);\n        console.log(player1Hp, player2Hp)\n        let p1HpCopy = player1Hp;\n        let p2HpCopy = player2Hp;\n        // const gameClock = setInterval(() => {\n        //     let rngAttack;\n        //     console.log(\"HP status:\", p1HpCopy, p2HpCopy)\n        //     if (p1HpCopy > 0 && p2HpCopy > 0) {\n        //         switch (round % 2 === 0) {\n        //             case true:\n        //                 rngAttack = Math.floor(Math.random() * p1.attackPower);\n        //                 p2HpCopy -= rngAttack;\n        //                 setPlayer2Hp(p2HpCopy);\n        //                 console.log(`p1 attacks for: ${rngAttack} damage!`, player2Hp);\n        //                 break;\n        //             case false:\n        //                 rngAttack = Math.floor(Math.random() * p2.attackPower);\n        //                 p1HpCopy -= rngAttack;\n        //                 setPlayer1Hp(p1HpCopy);\n        //                 console.log(`p2 attacks for: ${rngAttack} damage!`, player1Hp);\n        //                 break;\n        //         }\n        //         round++;\n        //         console.log(round)\n        //     } /*else if (player1Hp < 0) {\n        //         setPlayer1Hp(0);\n        //         clearInterval(gameClock);\n        //         handleWin(1);\n        //     } else if (player2Hp < 0) {\n        //         setPlayer1Hp(0);\n        //         clearInterval(gameClock);\n        //         handleWin(2);*/\n        //    // }\n        // }, 3000)\n        let interval = setInterval(() => {\n          if (p1HpCopy > 0 && p2HpCopy > 0) {\n            const rngAttack = Math.floor(Math.random() * p1.attackPower)\n            round % 2 === 0 ? p1HpCopy -= rngAttack : p2HpCopy -= rngAttack;\n            setPlayer1Hp(p1HpCopy);\n            setPlayer2Hp(p2HpCopy);\n            round++\n            } else {\n            clearInterval(interval);}\n        }, 1000);\n    }\n\n    // setTimeout(handleBattle, 3000)\n\n    return (\n        <div className=\"Dojo\">\n            <header className=\"battleStats\">\n                <div className=\"player-1-hp\"><h1>{player1Hp}</h1></div>\n                <button className=\"start\" onClick={() => setTimeout(handleBattle, 1000)}>FIGHT!!!</button>\n                <div className=\"player-2-hp\"><h1>{player2Hp}</h1></div>\n            </header>\n            <section className=\"battle-stats\">\n                <div></div>\n                <div></div>\n            </section>\n        </div>\n    )\n}\n\nexport default Fight;"],"mappings":"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"},"metadata":{},"sourceType":"module"}